// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <Menu/> Menu have rendrered correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          black={false}
        >
          <Link
            replace={false}
            to="/"
          >
            <img
              alt="logo"
              src="/logo/Logo.svg"
              style={Object {}}
            />
          </Link>
        </ForwardRef>,
        <ForwardRef
          black={false}
        >
          <Link
            replace={false}
            to="/coffee"
          >
            Our coffee
          </Link>
        </ForwardRef>,
        <ForwardRef
          black={false}
        >
          <Link
            replace={false}
            to="/goods"
          >
            For your pleasure
          </Link>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "black": false,
          "children": <Link
            replace={false}
            to="/"
          >
            <img
              alt="logo"
              src="/logo/Logo.svg"
              style={Object {}}
            />
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <img
              alt="logo"
              src="/logo/Logo.svg"
              style={Object {}}
            />,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "src": "/logo/Logo.svg",
              "style": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "rules": Array [
              " 
    font-size: 12px;
    margin-right: 40px;
    font-weight: normal;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    &:first-child {
      transform: translateY(3px);
      webkit-transform: translateY(3px);                    
    } 
    a {
        color: ",
              [Function],
              "; 
        &:visited {
            text-decoration: none;
            color: ",
              [Function],
              "; 
        }
        &:hover {
            text-decoration: none;
            color: ",
              [Function],
              "; 
        }    
    }      
",
            ],
          },
          "displayName": "styled.li",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "li",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "black": false,
          "children": <Link
            replace={false}
            to="/coffee"
          >
            Our coffee
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Our coffee",
            "replace": false,
            "to": "/coffee",
          },
          "ref": null,
          "rendered": "Our coffee",
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "rules": Array [
              " 
    font-size: 12px;
    margin-right: 40px;
    font-weight: normal;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    &:first-child {
      transform: translateY(3px);
      webkit-transform: translateY(3px);                    
    } 
    a {
        color: ",
              [Function],
              "; 
        &:visited {
            text-decoration: none;
            color: ",
              [Function],
              "; 
        }
        &:hover {
            text-decoration: none;
            color: ",
              [Function],
              "; 
        }    
    }      
",
            ],
          },
          "displayName": "styled.li",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "li",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "black": false,
          "children": <Link
            replace={false}
            to="/goods"
          >
            For your pleasure
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "For your pleasure",
            "replace": false,
            "to": "/goods",
          },
          "ref": null,
          "rendered": "For your pleasure",
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "rules": Array [
              " 
    font-size: 12px;
    margin-right: 40px;
    font-weight: normal;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    &:first-child {
      transform: translateY(3px);
      webkit-transform: translateY(3px);                    
    } 
    a {
        color: ",
              [Function],
              "; 
        &:visited {
            text-decoration: none;
            color: ",
              [Function],
              "; 
        }
        &:hover {
            text-decoration: none;
            color: ",
              [Function],
              "; 
        }    
    }      
",
            ],
          },
          "displayName": "styled.li",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "li",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
display: flex;
align-items: flex-end;
margin-top: 30px;
list-style-type: none;
",
        ],
      },
      "displayName": "styled.ul",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "ul",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            black={false}
          >
            <Link
              replace={false}
              to="/"
            >
              <img
                alt="logo"
                src="/logo/Logo.svg"
                style={Object {}}
              />
            </Link>
          </ForwardRef>,
          <ForwardRef
            black={false}
          >
            <Link
              replace={false}
              to="/coffee"
            >
              Our coffee
            </Link>
          </ForwardRef>,
          <ForwardRef
            black={false}
          >
            <Link
              replace={false}
              to="/goods"
            >
              For your pleasure
            </Link>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "black": false,
            "children": <Link
              replace={false}
              to="/"
            >
              <img
                alt="logo"
                src="/logo/Logo.svg"
                style={Object {}}
              />
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <img
                alt="logo"
                src="/logo/Logo.svg"
                style={Object {}}
              />,
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "src": "/logo/Logo.svg",
                "style": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                " 
    font-size: 12px;
    margin-right: 40px;
    font-weight: normal;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    &:first-child {
      transform: translateY(3px);
      webkit-transform: translateY(3px);                    
    } 
    a {
        color: ",
                [Function],
                "; 
        &:visited {
            text-decoration: none;
            color: ",
                [Function],
                "; 
        }
        &:hover {
            text-decoration: none;
            color: ",
                [Function],
                "; 
        }    
    }      
",
              ],
            },
            "displayName": "styled.li",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "li",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "black": false,
            "children": <Link
              replace={false}
              to="/coffee"
            >
              Our coffee
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Our coffee",
              "replace": false,
              "to": "/coffee",
            },
            "ref": null,
            "rendered": "Our coffee",
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                " 
    font-size: 12px;
    margin-right: 40px;
    font-weight: normal;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    &:first-child {
      transform: translateY(3px);
      webkit-transform: translateY(3px);                    
    } 
    a {
        color: ",
                [Function],
                "; 
        &:visited {
            text-decoration: none;
            color: ",
                [Function],
                "; 
        }
        &:hover {
            text-decoration: none;
            color: ",
                [Function],
                "; 
        }    
    }      
",
              ],
            },
            "displayName": "styled.li",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "li",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "black": false,
            "children": <Link
              replace={false}
              to="/goods"
            >
              For your pleasure
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "For your pleasure",
              "replace": false,
              "to": "/goods",
            },
            "ref": null,
            "rendered": "For your pleasure",
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                " 
    font-size: 12px;
    margin-right: 40px;
    font-weight: normal;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    &:first-child {
      transform: translateY(3px);
      webkit-transform: translateY(3px);                    
    } 
    a {
        color: ",
                [Function],
                "; 
        &:visited {
            text-decoration: none;
            color: ",
                [Function],
                "; 
        }
        &:hover {
            text-decoration: none;
            color: ",
                [Function],
                "; 
        }    
    }      
",
              ],
            },
            "displayName": "styled.li",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "li",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
display: flex;
align-items: flex-end;
margin-top: 30px;
list-style-type: none;
",
          ],
        },
        "displayName": "styled.ul",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "ul",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
